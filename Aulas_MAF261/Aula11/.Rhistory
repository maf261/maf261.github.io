Z <- cbind(1, contrasts(C(da$Var, contr="contr.treatment"))); Z
Z%*%beta
##---------------------------------------------------------------------
## Obtendo o quadro de anova matricialmente.
X <- model.matrix(~Var, data=da)
## Modelo: \mu+\alpha_i
Pmu <- X[,1]%*%solve(crossprod(X[,1]))%*%t(X[,1])
Pmualpha <- X%*%solve(crossprod(X))%*%t(X)
In <- diag(length(da$Var))
y <- da$Prod
## Somas de quadrados de Variedades e resídual.
t(y)%*%(Pmualpha-Pmu)%*%y
t(y)%*%(In-Pmualpha)%*%y
## Graus de liberdade de Variedades e resídual.
sum(diag(Pmualpha-Pmu))
sum(diag(In-Pmualpha))
## Usando a lm().
m0 <- lm(Prod~Var, data=da)
coef(m0)
anova(m0)
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
#Exercicio 4.1
alpha <- 0.05
#Variedades: A, B, C e D
t1 <- c(25,26,20,23,21)
t2 <- c(31,25,28,27,24)
t3 <- c(22,26,28,25,29)
t4 <- c(33,29,31,34,28)
tab <- matrix(c(t1,t2,t3,t4),5,4)
(n <- length(tab))
(I <- dim(tab)[2])
(J <- dim(tab)[1])
(bart1 <- mean(t1))
(bart2 <- mean(t2))
(bart3 <- mean(t3))
(bart4 <- mean(t4))
(Tott1 <- sum(t1))
(Tott2 <- sum(t2))
(Tott3 <- sum(t3))
(Tott4 <- sum(t4))
(mu <- mean(tab))
####################################
difTot <- matrix(NA,dim(tab)[1],dim(tab)[2])
for (j in 1:dim(tab)[2]) {
for (i in 1:dim(tab)[1]) {
difTot[i,j] <- ((tab[i,j]-mu)^2)
}
}
(SQTot <- sum(difTot))
mean(tab[,1])
####################################
difTrat <- matrix(NA,1,I)
for (i in 1:I) {
difTrat[i] <- ((mean(tab[,i])-mu)^2)
}
(SQTrat <- 5*sum(difTrat))
####################################
difRes <- matrix(NA,dim(tab)[1],dim(tab)[2])
for (i in 1:dim(tab)[2]) {
for (j in 1:dim(tab)[1]) {
difRes[j,i] <- (tab[j,i]-mean(tab[,i]))^2
}
}
(SQRes <- sum(difRes))
####################################
FV <- cbind("Trat","Res","Total")
GL <- cbind(I-1,I*(J-1),I*J-1)
SQ <- cbind(SQTrat,SQRes,SQTot)
QM <- cbind(SQTrat/GL[1],SQRes/GL[2],SQTot/GL[3])
(Fcal <- QM[1,1]/QM[1,2])
(Ftab <- qf(alpha,GL[1],GL[2],lower.tail = FALSE))
(pvalor <- pf(Fcal,GL[1],GL[2],lower.tail = FALSE))
RR <- "Rejeita-se H0 ao nível alpha de significancia"
RNR <- "Não rejeita-se H0 ao nível alpha de significancia"
dif <- "Pelo menos uma média difere das demais"
ndif <- "Todas as médias são iguais"
ifelse(Fcal>Ftab,RR,RNR)
ifelse(Fcal>Ftab,dif,ndif)
###########################################################
##---------------------------------------------------------------------
## Pacotes.
pkg <- c("lattice", "latticeExtra", "plyr", "reshape","doBy", "multcomp")
sapply(pkg, require, character.only=TRUE)
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
#Exercicio 4.1
## Dados de experimento em DIC. Fator Variedade de milho aplicada à 5 parcelas
## experimentais. A resposta é a produtividade ao final do experimento.
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_1.txt",
"\t")
#View(da)
str(da)
da$Var <- as.factor(da$Var)
is.factor(da$Var)
xyplot(Prod~Var, data=da, jitter.x=TRUE)
## dotplot(Prod~Var, data=da, jitter.x=TRUE)
## bwplot(Prod~Var, data=da, pch="|")
X <- model.matrix(~Var, data=da)
## (X <- model.matrix(~0+Var, data=da))
## (X <- model.matrix(~-1+Var, data=da))
## (X <- model.matrix(~Var, data=da, contrasts=list(Var=contr.SAS)))
## (X <- model.matrix(~Var, data=da, contrasts=list(Var=contr.sum)))
## (X <- model.matrix(~Var, data=da, contrasts=list(Var=contr.helmert)))
X
## beta = (X'X)^{-1} X'y
XlX <- crossprod(X)
XlX
Xly <- crossprod(X, da$Prod)
Xly
beta <- solve(XlX, Xly)
beta
##---------------------------------------------------------------------
## Matriz de contrastes aplicados e as estimativas de médias, \mu_i =
## \mu+\tau_i.
Z <- cbind(1, contrasts(C(da$Var, contr="contr.treatment"))); Z
Z%*%beta
##---------------------------------------------------------------------
## Obtendo o quadro de anova matricialmente.
X <- model.matrix(~Var, data=da)
## Modelo: \mu+\alpha_i
Pmu <- X[,1]%*%solve(crossprod(X[,1]))%*%t(X[,1])
Pmualpha <- X%*%solve(crossprod(X))%*%t(X)
In <- diag(length(da$Var))
y <- da$Prod
## Somas de quadrados de Variedades e resídual.
t(y)%*%(Pmualpha-Pmu)%*%y
t(y)%*%(In-Pmualpha)%*%y
## Graus de liberdade de Variedades e resídual.
sum(diag(Pmualpha-Pmu))
sum(diag(In-Pmualpha))
## Usando a lm().
m0 <- lm(Prod~Var, data=da)
coef(m0)
anova(m0)
library(readr)
Exer_4_1 <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_1.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
#Exercicio 4.1
alpha <- 0.05
#Variedades: A, B, C e D
t1 <- c(25,26,20,23,21)
t2 <- c(31,25,28,27,24)
t3 <- c(22,26,28,25,29)
t4 <- c(33,29,31,34,28)
tab <- matrix(c(t1,t2,t3,t4),5,4)
(n <- length(tab))
(I <- dim(tab)[2])
(J <- dim(tab)[1])
(bart1 <- mean(t1))
(bart2 <- mean(t2))
(bart3 <- mean(t3))
(bart4 <- mean(t4))
(Tott1 <- sum(t1))
(Tott2 <- sum(t2))
(Tott3 <- sum(t3))
(Tott4 <- sum(t4))
(mu <- mean(tab))
####################################
difTot <- matrix(NA,dim(tab)[1],dim(tab)[2])
for (j in 1:dim(tab)[2]) {
for (i in 1:dim(tab)[1]) {
difTot[i,j] <- ((tab[i,j]-mu)^2)
}
}
(SQTot <- sum(difTot))
mean(tab[,1])
####################################
difTrat <- matrix(NA,1,I)
for (i in 1:I) {
difTrat[i] <- ((mean(tab[,i])-mu)^2)
}
(SQTrat <- 5*sum(difTrat))
####################################
difRes <- matrix(NA,dim(tab)[1],dim(tab)[2])
for (i in 1:dim(tab)[2]) {
for (j in 1:dim(tab)[1]) {
difRes[j,i] <- (tab[j,i]-mean(tab[,i]))^2
}
}
(SQRes <- sum(difRes))
####################################
FV <- cbind("Trat","Res","Total")
GL <- cbind(I-1,I*(J-1),I*J-1)
SQ <- cbind(SQTrat,SQRes,SQTot)
QM <- cbind(SQTrat/GL[1],SQRes/GL[2],SQTot/GL[3])
(Fcal <- QM[1,1]/QM[1,2])
(Ftab <- qf(alpha,GL[1],GL[2],lower.tail = FALSE))
(pvalor <- pf(Fcal,GL[1],GL[2],lower.tail = FALSE))
RR <- "Rejeita-se H0 ao nível alpha de significancia"
RNR <- "Não rejeita-se H0 ao nível alpha de significancia"
dif <- "Pelo menos uma média difere das demais"
ndif <- "Todas as médias são iguais"
ifelse(Fcal>Ftab,RR,RNR)
ifelse(Fcal>Ftab,dif,ndif)
###########################################################
##---------------------------------------------------------------------
## Pacotes.
pkg <- c("lattice", "latticeExtra", "plyr", "reshape","doBy", "multcomp")
library(readr)
sapply(pkg, require, character.only=TRUE)
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_1.txt",
"\t")
library(ExpDes.pt)
library(readr)
if(!is.null(dev.list())) dev.off()
cat("\014")
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_1.txt",
"\t")
#View(da)
str(da)
da$Var <- as.factor(da$Var)
is.factor(da$Var)
dic(Var,Prod)
dic(da$Var,da$Prod)
dic(da$Var,
da$Prod,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.05,
sigF = 0.05)
library(lattice)
xyplot(Prod~Var, data=da, jitter.x=TRUE)
xyplot(Prod~reorder(Var,Prod), data=da, jitter.x=TRUE)
dotplot(Prod~Var, data=da, jitter.x=TRUE)
bwplot(Prod~Var, data=da, pch="|")
dotplot(Prod~reorder(Var,Prod), data=da, jitter.x=TRUE)
bwplot(Prod~Var, data=da, pch="|")
bwplot(Prod~reorder(Var,Prod), data=da, jitter.x=TRUE)
xyplot(Prod~Var, data=da, jitter.x=TRUE)
xyplot(Prod~reorder(Var,Prod), data=da, jitter.x=TRUE)
dotplot(Prod~Var, data=da, jitter.x=TRUE)
dotplot(Prod~reorder(Var,Prod), data=da, jitter.x=TRUE)
bwplot(Prod~Var, data=da, pch="|")
bwplot(Prod~reorder(Var,Prod), data=da, jitter.x=TRUE)
bwplot(Prod~reorder(Var,Prod), data=da, pch="|")
m0 <- lm(Prod~Var, data=da)
anova(m0)
summary(m0)
par(mfrow=c(2,2))
plot(m0)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
install.packages("kableExtra")
require(knitr)
require(kfigr)
library(kableExtra)
options(knitr.table.format = "latex")
knitr::opts_chunk$set(echo = TRUE,fig.align = "center",message=FALSE, warning=FALSE)
summary(da$Var)
#Estatística Descritiva dos dados
kable(summary(da),format = "markdown",digits = 2, padding = 3)
da$Prod[Var="A"]
da$Prod
da$Var
da$Prod[A,]
da$Prod["A",]
table(da)
summary(table(da))
aggregate(Prod ~ Var, data = da, FUN = mean);
aggregate(Prod ~ Var, data = da, FUN = summary);
aggregate(Prod ~ Var, data = da, FUN = summary);
aggregate(Prod ~ Var, data = da, FUN = mean);
summary(Prod ~ Var, data = da)
aggregate(Prod ~ Var, data = da, FUN = mean);
aggregate(Prod ~ Var, data = da, FUN = sum);
aggregate(Prod ~ Var, data = da, function = mean);
aggregate(Prod ~ Var, data = da, FUN = mean);
res <- aggregate(Prod ~ Var, data = da, FUN = mean);
#Estatística Descritiva dos dados
kable(res,format = "markdown",digits = 2, padding = 3)
kable(res,format = "markdown",digits = 2, padding = 3,align = "center")
kable(res,format = "markdown",digits = 2, padding = 3,align = "c")
citation("ExpDes.pt")
library(readr)
if(!is.null(dev.list())) dev.off()
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_1.txt",
"\t")
da
str(da)
da$Var <- as.factor(da$Var)
is.factor(da$Var)
#Resumo total dos dados
summary(da)
#Média dos dados por variedade
res <- aggregate(Prod ~ Var, data = da, FUN = mean);
kable(res,format = "markdown",digits = 2, padding = 3,align = "c")
library(readr)
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_2.txt",
"\t")
da
str(da)
da$Var <- as.factor(da$Var)
library(readr)
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_2.txt",
"\t")
da
str(da)
da$Var <- as.factor(da$Var)
str(da)
library(readr)
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_2.txt",
"\t")
da
str(da)
da$Var <- as.factor(da$Var)
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_2.txt",
"\t")
da
str(da)
is.factor(da$Tec)
da$Tec <- as.factor(da$Tempo)
da <- read_delim("E:/Documentos/GitHub/MAF261/maf261.github.io/Exercicios/Exercicios_noR/Exer_4_2.txt",
"\t")
da
str(da)
da$Tec <- as.factor(da$Tec)
is.factor(da$Tec)
#Resumo total dos dados
summary(da)
#Média dos dados por variedade
res <- aggregate(Tec ~ Tempo, data = da, FUN = mean);
kable(res,format = "markdown",digits = 2, padding = 3,align = "c")
#Média dos dados por variedade
res <- aggregate(Tempo ~ Tec, data = da, FUN = mean);
kable(res,format = "markdown",digits = 2, padding = 3,align = "c")
library(lattice)
xyplot(Tempo~Tec, data=da, jitter.x=TRUE)
xyplot(Tempo~reorder(Tec,Tempo), data=da, jitter.x=TRUE)
dotplot(Tempo~Tec, data=da, jitter.x=TRUE)
dotplot(Tempo~reorder(Tec,Tempo), data=da, jitter.x=TRUE)
bwplot(Tempo~Tec, data=da, pch="|")
bwplot(Tempo~reorder(Tec,Tempo), data=da, pch="|")
m0 <- lm(Tempo~Tec, data=da)
par(mfrow=c(2,2))
plot(m0)
m0 <- lm(Tempo~Tec, data=da)
anova(m0)
library(ExpDes.pt)
dic(da$Tec,
da$Tempo,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.05,
sigF = 0.05)
dic(da$Tec,
da$Tempo,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.01,
sigF = 0.01)
dic <- dic(da$Tec,
da$Tempo,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.01,
sigF = 0.01)
plotres(dic)
graficos(dic, grau=1)
graficos(dic, grau=2)
graficos(dic, grau=3)
library(ExpDes.pt)
dic <- dic(da$Tec,
da$Tempo,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.01,
sigF = 0.01)
plotres(dic)
graficos(dic, grau=1)
library(labestData)
labestDataView()
library(devtools)
# Do repositório de desenvolvimento no GitLab.
install_git(url = "https://gitlab.c3sl.ufpr.br/pet-estatistica/labestData.git",
branch = "master", build_vignettes = TRUE)
# Do repositório de desenvolvimento no GitLab.
#install_git(url = "https://gitlab.c3sl.ufpr.br/pet-estatistica/labestData.g#it", branch = "master", build_vignettes = TRUE)
library(labestData)
labestDataView()
#library(devtools)
# Do repositório de desenvolvimento no GitLab.
#install_git(url = "https://gitlab.c3sl.ufpr.br/pet-estatistica/labestData.g#it", branch = "master", build_vignettes = TRUE)
library(labestData)
labestDataView()
# Do repositório de divulgação no GitHub.
install_github(repo = "labestData",
username = "pet-estatistica",
ref = "master", build_vignettes = TRUE)
library(labestData)
labestDataView()
install.packages("devtools")
require(knitr)
require(kfigr)
library(kableExtra)
options(knitr.table.format = "latex")
knitr::opts_chunk$set(echo = TRUE,fig.align = "center",message=FALSE, warning=FALSE)
install_github(repo = "labestData",
username = "pet-estatistica",
ref = "master", build_vignettes = TRUE)
library(devtools)
install_github(repo = "labestData",
username = "pet-estatistica",
ref = "master", build_vignettes = TRUE)
library(labestData)
labestDataView()
str(BanzattoQd3.2.1)
library(lattice)
data(BanzattoQd3.2.1)
aggregate(pulgoes ~ trat,  data = BanzattoQd3.2.1,
FUN = function(x) { c(mean = mean(x), var = var(x)) })
xyplot(pulgoes ~ trat, data = BanzattoQd3.2.1,
xlab = "Tratamentos",
ylab = "Número de pulgões 36h após pulverização")
ban <- BanzattoQd3.2.1
m0 <- lm(pulgoes~trat,data = ban)
anova(m0)
xyplot(pulgoes ~ trat, data = BanzattoQd3.2.1,
xlab = "Tratamentos",
ylab = "Número de pulgões 36h após pulverização")
xyplot(pulgoes ~ reorder(trat,pulgoes), data = BanzattoQd3.2.1,
xlab = "Tratamentos",
ylab = "Número de pulgões 36h após pulverização")
xyplot(pulgoes ~ reorder(trat,pulgoes), data = ban,
xlab = "Tratamentos",
ylab = "Número de pulgões 36h após pulverização")
plot(m0)
dic <- dic(ban$trat,
ban$pulgoes,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.05,
sigF = 0.05)
#Suponha que esteja tudo bem!
library(ExpDes.pt)
dic <- dic(ban$trat,
ban$pulgoes,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.05,
sigF = 0.05)
#Avalie os resultados
plotres(dic)
citation("labestData")
MASS::boxcox(m0)
MASS::boxcox(m0)
abline(v=0.2,col=2)
MASS::boxcox(m0)
abline(v=0.2,col=2)
abline(v=0.25,col=4)
MASS::boxcox(m0)
abline(v=0.2,col="red")
abline(v=0.25,col="blue")
m0 <- lm(pulgoes^0.2~trat,data = ban)
plot(m0)
#Suponha que esteja tudo bem!
library(ExpDes.pt)
dic <- dic(ban$trat,
ban$pulgoes,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.05,
sigF = 0.05)
m0 <- lm(pulgoes^0.2~trat,data = ban)
plot(m0)
#Suponha que esteja tudo bem!
library(ExpDes.pt)
dic <- dic(ban$trat,
ban$pulgoes,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.05,
sigF = 0.05)
#Avalie os resultados
plotres(dic)
dic <- dic(ban$trat,
ban$pulgoes^0.2,
quali = TRUE,
mcomp = "tukey",
nl = FALSE,
hvar = 'bartlett',
sigT = 0.05,
sigF = 0.05)
#Avalie os resultados
plotres(dic)
